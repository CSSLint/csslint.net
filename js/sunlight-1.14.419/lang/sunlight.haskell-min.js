(function(a,b){if(a===b||a.registerLanguage===b){throw"Include sunlight.js before including language files";}a.registerLanguage("haskell",{keywords:["as","case","of","class","datafamily","datainstance","data","default","derivinginstance","deriving","do","forall","foreign","hiding","if","then","else","import","infix","infixl","infixr","instance","let","in","mdo","module","newtype","proc","qualified","rec","typefamily","typeinstance","type","where"],customParseRules:[function(e){var d=e.reader.peek(),g=2,c=e.reader.getLine(),f=e.reader.getColumn();if(e.reader.current()!=="'"&&d!=="'"){return null;}if(d&&d==="\\"){g++;}if(!/'$/.test(e.reader.peek(g))){return null;}return e.createToken("char","'"+e.reader.read(g),c,f);},function(e){var d,h=0,i,g,c=e.reader.getLine(),f=e.reader.getColumn();if(!/[A-Za-z_]/.test(e.reader.current())){return null;}while((d=e.reader.peek(++h))&&d.length===h){if(!/[\w']$/.test(d)){break;}}i=e.reader.current()+d.substring(0,d.length-1);g=e.token(e.count()-1);if(g&&g.name==="keyword"&&a.util.contains(["class","newtype","data","type"],g.value)){e.items.userDefinedFunctions.push(i);e.reader.read(i.length-1);return e.createToken("ident",i,c,f);}if(e.reader.isSolWs()){while((d=e.reader.peek(++h))&&d.length===h){if(!/\s$/.test(d)){if(!/::$/.test(e.reader.peek(++h))){return null;}e.items.userDefinedFunctions.push(i);e.reader.read(i.length-1);return e.createToken("ident",i,c,f);}}}return null;}],customTokens:{"function":{values:["abs","acosh","acos","all","and","any","appendFile","asinh","asin","asTypeOf","atan2","atanh","atan","break","catch","ceiling","compare","concatMap","concat","const","cosh","cos","curry","cycle","decodeFloat","divMod","div","dropWhile","drop","either","elem","encodeFloat","enumFromThenTo","enumFromThen","enumFromTo","enumFrom","error","even","exponent","exp","fail","filter","flip","floatDigits","floatRadix","floatRange","floor","fmap","foldl1","foldl","foldr1","foldr","fromEnum","fromInteger","fromIntegral","fromRational","fst","gcd","getChar","getContents","getLine","head","id","init","interact","ioError","isDenormalized","isIEEE","isInfinite","isNaN","isNegativeZero","iterate","last","lcm","length","lex","lines","logBase","log","lookup","mapM_","mapM","map","maxBound","maximum","max","maybe","minBound","minimum","min","mod","negate","notElem","not","null","odd","or","otherwise","pi","pred","print","product","properFraction","putChar","putStrLn","putStr","quotRem","quot","readFile","readIO","readList","readLn","readParen","readsPrec","reads","realToFrac","read","recip","rem","repeat","replicate","return","reverse","round","scaleFloat","scanl1","scanl","scanr1","scanr","sequence_","sequence","seq","showChar","showList","showParen","showsPrec","showString","shows","show","significand","signum","sinh","sin","snd","splitAt","sqrt","subtract","succ","sum","tail","takeWhile","take","tanh","tan","toEnum","toInteger","toRational","truncate","uncurry","undefined","unlines","until","unwords","unzip3","unzip","userError","words","writeFile","zip3","zipWith3","zipWith","zip"],boundary:"\\b"},"class":{values:["Bounded","Enum","Eq","Floating","Fractional","Functor","Integral","Monad","Num","Ord","Read","RealFloat","RealFrac","Real","Show"],boundary:"\\b"},type:{values:["Bool","Char","Double","Either","FilePath","Float","Integer","Int","IOError","IO","Maybe","Ordering","ReadS","ShowS","String","False","True","LT","GT","EQ","Nothing","Just","Left","Right"],boundary:"\\b"}},scopes:{string:[['"','"',a.util.escapeSequences.concat(['\\"'])]],comment:[["--","\n",null,true],["{-","-}"]],infixOperator:[["`","`",["\\`"]]]},identFirstLetter:/[A-Za-z_]/,identAfterFirstLetter:/[\w']/,namedIdentRules:{custom:[function(c){return a.util.contains(c.items.userDefinedFunctions,c.tokens[c.index].value);}]},contextItems:{userDefinedFunctions:[]},operators:["::",":","=>","==","=","@","[|","|]","\\\\","\\","/=","/","++","+","-<<","-<","->","-","&&","!!","!","''","'","??","?","#","<-","<=","<",">@>",">>=",">>",">=",">","^^","^","**","*","||","|","~","_","..","."]});}(this["Sunlight"]));